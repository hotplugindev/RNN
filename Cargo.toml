[package]
name = "rnn"
version = "0.1.0"
edition = "2021"
authors = ["Giona Berti <mail@gberti.com>"]
description = "A high-performance neural network library for Rust with CPU and GPU support"
license = "MIT"
repository = "https://github.com/hotplugindev/rnn"
keywords = ["neural-network", "machine-learning", "deep-learning", "gpu", "cpu"]
categories = ["science", "algorithms"]

[lib]
name = "rnn"
path = "src/lib.rs"

[dependencies]
# Linear algebra and numerical computation
ndarray = { version = "0.15", features = ["serde"] }
ndarray-linalg = { version = "0.16", optional = true }
blas-src = { version = "0.8", features = ["openblas"], optional = true }
lapack-src = { version = "0.8", features = ["openblas"], optional = true }

# GPU computation backends (optional, runtime-loaded)
libloading = { version = "0.8", optional = true }

# Platform-specific GPU backends
cudarc = { version = "0.12", features = ["cuda-12060"], optional = true }
opencl3 = { version = "0.7", optional = true }
ocl = { version = "0.19", optional = true }
hip-sys = { version = "0.1.1", optional = true }

# GPU kernel compilation
cc = { version = "1.0", optional = true }
bindgen = { version = "0.69", optional = true }

# Always required dependencies
num_cpus = "1.0"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
bincode = "1.3"

# Date and time handling
chrono = { version = "0.4", features = ["serde"] }

# Random number generation
rand = "0.8"
rand_distr = "0.4"

# Parallel computation
rayon = "1.7"

# Error handling
thiserror = "1.0"
anyhow = "1.0"

# Performance and profiling
criterion = { version = "0.5", optional = true }

# Logging
log = "0.4"

# Mathematical functions
num-traits = "0.2"
approx = "0.5"

# Signal handling
ctrlc = "3.4"

[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports"] }
proptest = "1.0"

[features]
default = ["cpu", "gpu-runtime"]
cpu = []
blas = ["ndarray-linalg", "blas-src", "lapack-src"]
gpu-runtime = ["dep:libloading"]
gpu-static = []
cuda = ["gpu-runtime", "dep:cudarc", "dep:cc", "dep:bindgen"]
opencl = ["gpu-runtime", "dep:ocl"]
rocm = ["gpu-runtime", "dep:hip-sys", "dep:cc"]
benchmarks = ["criterion"]

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"

[profile.bench]
opt-level = 3
lto = true
codegen-units = 1
